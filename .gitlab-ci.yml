stages:
  - test

Run cURL:
  stage: test
  image: node:8.12-alpine
  before_script:
    - apk update && apk add curl bash
    - npm i -g json-server ajv-cli
    - json-server ./db.json &
  script:
    - echo "Running requests" && cd curl && sleep 1
    - ./get-todos.sh .env
    - ./post-todo.sh .env

Run Postman:
  stage: test
  image: node:8.12-alpine
  variables:
    POSTMAN_API_KEY: $POSTMAN_API_KEY_GITLAB
    POSTMAN_API_URL: "https://api.getpostman.com"
    POSTMAN_ENV_UUID: "148558-80cdf3c9-7ead-4e7a-bc8e-37acd328b484"
    POSTMAN_COLLECTION_UUID: "148558-169a2b6c-057b-40f0-a118-70012d38f3f2"
  before_script:
    - npm i -g json-server newman
    - json-server ./db.json &
  script:
    - ./postman/run.sh

Run SoapUI:
  stage: test
  image: docker:stable
  services:
    - docker:stable-dind
  variables:
    SOAPUI_VERSION: '5.4.0'
    JSON_HOST_NAME: json-server
    SOAPUI_HOST_NAME: ddavison-soapui
  before_script:
    - apk update && apk add curl bash
  script:
    - docker network create --internal test
    - docker run --rm -d -p 80:80 --net test -h $JSON_HOST_NAME --name=$JSON_HOST_NAME -v $CI_PROJECT_DIR/db.json:/data/db.json clue/json-server
    - docker run --rm -d -p 3000:3000 --net test -h $SOAPUI_HOST_NAME --name=$SOAPUI_HOST_NAME -v $CI_PROJECT_DIR/soapui:/opt/project ddavison/soapui
    - docker exec $SOAPUI_HOST_NAME bash /opt/SoapUI/bin/testrunner.sh -ProotURL=http://$JSON_HOST_NAME /opt/project/JSONPlaceholder-soapui-project.xml
